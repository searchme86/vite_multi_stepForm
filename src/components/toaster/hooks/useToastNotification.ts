import React from 'react';
import { ToastOptions } from '../types/toastTypes';
import { useToastCreation } from './useToastCreation';
import { useToastLifecycle } from './useToastLifecycle';

export const useToastNotification = () => {
  console.log('üîî useToastNotification: ÌÜ†Ïä§Ìä∏ ÏïåÎ¶º Í¥ÄÎ¶¨ ÌõÖ Ï¥àÍ∏∞Ìôî');

  const { addToast } = useToastCreation();
  const {
    toasts,
    addToastToQueue,
    removeToastFromQueue,
    clearAllToasts,
    getToastCount,
  } = useToastLifecycle();

  const showNotification = React.useCallback(
    (options: ToastOptions) => {
      console.log('üîî useToastNotification: ÏïåÎ¶º ÌëúÏãú', options);
      addToast(options);
      addToastToQueue(options);
    },
    [addToast, addToastToQueue]
  );

  const showSuccess = React.useCallback(
    (title: string, description: string) => {
      console.log('‚úÖ useToastNotification: ÏÑ±Í≥µ ÏïåÎ¶º');
      showNotification({ title, description, color: 'success' });
    },
    [showNotification]
  );

  const showError = React.useCallback(
    (title: string, description: string) => {
      console.log('‚ùå useToastNotification: ÏóêÎü¨ ÏïåÎ¶º');
      showNotification({ title, description, color: 'danger' });
    },
    [showNotification]
  );

  const showWarning = React.useCallback(
    (title: string, description: string) => {
      console.log('‚ö†Ô∏è useToastNotification: Í≤ΩÍ≥† ÏïåÎ¶º');
      showNotification({ title, description, color: 'warning' });
    },
    [showNotification]
  );

  const showInfo = React.useCallback(
    (title: string, description: string) => {
      console.log('‚ÑπÔ∏è useToastNotification: Ï†ïÎ≥¥ ÏïåÎ¶º');
      showNotification({ title, description, color: 'primary' });
    },
    [showNotification]
  );

  return {
    toasts,
    addToast: showNotification,
    showSuccess,
    showError,
    showWarning,
    showInfo,
    removeToast: removeToastFromQueue,
    clearAllToasts,
    getToastCount,
  };
};
